name: Deploy Terraform AWS

on:
  workflow_dispatch:
    inputs:
      ghes_version:
        description: 'GitHub Enterprise Server version'
        required: true
        default: '3.11.2'

env:
  domain: dupoiron.com
  subdomain: ghes
  OVH_APPLICATION_KEY: ${{ secrets.OVH_APPLICATION_KEY }}
  OVH_APPLICATION_SECRET: ${{ secrets.OVH_APPLICATION_SECRET }}
  OVH_CONSUMER_KEY: ${{ secrets.OVH_CONSUMER_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    runs-on: ubuntu-latest
  
    env:
      TF_VAR_ghes_version: ${{ github.event.inputs.ghes_version }}    

    outputs:
      public_ip: ${{ steps.deploy.outputs.public_ip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: eu-west-3
          
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Generate SSH key
        run: |
          ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1

      - name: Upload private key
        uses: actions/upload-artifact@v4
        with:
          name: private-key
          path: ~/.ssh/id_rsa

      - name: Terraform apply
        id: deploy
        working-directory: aws
        run: | 
          terraform init -backend-config=backend.conf
          terraform plan -var "ghes_version=${{ env.TF_VAR_ghes_version }}" -out=tfplan
          terraform apply -auto-approve tfplan
          terraform output -json > terraform_output.json
          echo "public_ip=$(cat terraform_output.json | jq -r '.ghes_ec2_public_ip.value')" >> "$GITHUB_OUTPUT"

  # ovh:
  #   runs-on: ubuntu-latest
  #   needs: terraform
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Update OVH DNS
  #       uses: ./ovh
  #       with:
  #         ovh_app_key: ${{ secrets.OVH_APP_KEY }}
  #         ovh_app_secret: ${{ secrets.OVH_APP_SECRET }}
  #         ovh_consumer_key: ${{ secrets.OVH_CONSUMER_KEY }}
  #         action: 'update'
  #         domain: ${{ env.domain }}
  #         subdomain: ${{ env.subdomain }}
  #         ip: ${{ needs.terraform.outputs.public_ip }}

  summary:
    runs-on: ubuntu-latest
    # needs: [terraform, ovh]
    needs: terraform
    steps:
      - name: Summary
        run: |
          echo "GHES version: ${{ github.event.inputs.ghes_version }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Public IP: ${{ needs.terraform.outputs.public_ip }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Home page: https://${{ env.subdomain }}.${{ env.domain }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Management console: https://${{ needs.terraform.outputs.public_ip }}:8443/setup" >> "$GITHUB_STEP_SUMMARY"
